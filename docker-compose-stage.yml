version: '3.9'

services:

  redis:
    container_name: redis
    image: redis
    restart: always
    ports:
      - "6379:6379"
    command: redis-server --save 60 1 --loglevel warning

  backend:
    container_name: backend
    build: .
    command: sh -c "python manage.py makemigrations && python manage.py migrate && python manage.py collectstatic --noinput && gunicorn config.wsgi --bind 0.0.0.0:8000"
    expose:
      - 8000
    volumes:
      - .:/code/
      - static_volume:/code/static
      - media_volume:/code/media
    environment:
      - SECRET_KEY=django-insecure-uieuov63yqk)h381itkiz@lpsfy-6(1&r%k6=#(5xg=^w2h4ka
      - DEBUG=False
      # - ALLOWED_HOSTS=*
    depends_on:
      - redis

  worker:
    build: .
    command: sh -c "pip install django-redis && celery -A config worker --loglevel=info"
    volumes:
      - .:/code/
    depends_on:
      - redis
      - backend
  
  # implement celery in docker compose
  beat:
    build: .
    command: celery -A config beat --loglevel=info
    volumes:
      - .:/code/
    depends_on:
      - backend
      - redis
      - worker

  nginx:
    image: nginx
    container_name: nginx
    restart: always
    ports:
      - 80:80
    volumes:
      - ./default.conf:/etc/nginx/conf.d/default.conf
      - static_volume:/home/code/static
      - media_volume:/home/code/media
    depends_on:
      - redis
      - backend

volumes:
  static_volume:
  media_volume:    

